// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: H5ExtTransferResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "H5ExtTransferResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class H5ExtTransferResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<H5ExtTransferResponse> {
} _H5ExtTransferResponse_default_instance_;

namespace protobuf_H5ExtTransferResponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H5ExtTransferResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H5ExtTransferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H5ExtTransferResponse, _baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(H5ExtTransferResponse, _jsapiresponse_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(H5ExtTransferResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_H5ExtTransferResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "H5ExtTransferResponse.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _H5ExtTransferResponse_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_JsApiResponse_2eproto::InitDefaults();
  _H5ExtTransferResponse_default_instance_.DefaultConstruct();
  _H5ExtTransferResponse_default_instance_.get_mutable()->_baseresponse_ = const_cast< ::MMPro::micromsg::BaseResponse*>(
      ::MMPro::micromsg::BaseResponse::internal_default_instance());
  _H5ExtTransferResponse_default_instance_.get_mutable()->_jsapiresponse_ = const_cast< ::MMPro::micromsg::JsApiResponse*>(
      ::MMPro::micromsg::JsApiResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\033H5ExtTransferResponse.proto\022\016MMPro.mic"
      "romsg\032\022BaseResponse.proto\032\023JsApiResponse"
      ".proto\"\203\001\n\025H5ExtTransferResponse\0223\n\r_Bas"
      "eResponse\030\001 \002(\0132\034.MMPro.micromsg.BaseRes"
      "ponse\0225\n\016_jsApiResponse\030\002 \001(\0132\035.MMPro.mi"
      "cromsg.JsApiResponse"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "H5ExtTransferResponse.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_JsApiResponse_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_H5ExtTransferResponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int H5ExtTransferResponse::kBaseResponseFieldNumber;
const int H5ExtTransferResponse::kJsApiResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

H5ExtTransferResponse::H5ExtTransferResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_H5ExtTransferResponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.H5ExtTransferResponse)
}
H5ExtTransferResponse::H5ExtTransferResponse(const H5ExtTransferResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__baseresponse()) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse(*from._baseresponse_);
  } else {
    _baseresponse_ = NULL;
  }
  if (from.has__jsapiresponse()) {
    _jsapiresponse_ = new ::MMPro::micromsg::JsApiResponse(*from._jsapiresponse_);
  } else {
    _jsapiresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.H5ExtTransferResponse)
}

void H5ExtTransferResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_baseresponse_, 0, reinterpret_cast<char*>(&_jsapiresponse_) -
    reinterpret_cast<char*>(&_baseresponse_) + sizeof(_jsapiresponse_));
}

H5ExtTransferResponse::~H5ExtTransferResponse() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.H5ExtTransferResponse)
  SharedDtor();
}

void H5ExtTransferResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete _jsapiresponse_;
  }
}

void H5ExtTransferResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* H5ExtTransferResponse::descriptor() {
  protobuf_H5ExtTransferResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_H5ExtTransferResponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const H5ExtTransferResponse& H5ExtTransferResponse::default_instance() {
  protobuf_H5ExtTransferResponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

H5ExtTransferResponse* H5ExtTransferResponse::New(::google::protobuf::Arena* arena) const {
  H5ExtTransferResponse* n = new H5ExtTransferResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void H5ExtTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.H5ExtTransferResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__baseresponse()) {
      GOOGLE_DCHECK(_baseresponse_ != NULL);
      _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
    }
    if (has__jsapiresponse()) {
      GOOGLE_DCHECK(_jsapiresponse_ != NULL);
      _jsapiresponse_->::MMPro::micromsg::JsApiResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool H5ExtTransferResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.H5ExtTransferResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.JsApiResponse _jsApiResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__jsapiresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.H5ExtTransferResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.H5ExtTransferResponse)
  return false;
#undef DO_
}

void H5ExtTransferResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.H5ExtTransferResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseresponse_, output);
  }

  // optional .MMPro.micromsg.JsApiResponse _jsApiResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_jsapiresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.H5ExtTransferResponse)
}

::google::protobuf::uint8* H5ExtTransferResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.H5ExtTransferResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseresponse_, deterministic, target);
  }

  // optional .MMPro.micromsg.JsApiResponse _jsApiResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_jsapiresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.H5ExtTransferResponse)
  return target;
}

size_t H5ExtTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.H5ExtTransferResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (has__baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);
  }
  // optional .MMPro.micromsg.JsApiResponse _jsApiResponse = 2;
  if (has__jsapiresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_jsapiresponse_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void H5ExtTransferResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.H5ExtTransferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const H5ExtTransferResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const H5ExtTransferResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.H5ExtTransferResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.H5ExtTransferResponse)
    MergeFrom(*source);
  }
}

void H5ExtTransferResponse::MergeFrom(const H5ExtTransferResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.H5ExtTransferResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable__baseresponse()->::MMPro::micromsg::BaseResponse::MergeFrom(from._baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable__jsapiresponse()->::MMPro::micromsg::JsApiResponse::MergeFrom(from._jsapiresponse());
    }
  }
}

void H5ExtTransferResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.H5ExtTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void H5ExtTransferResponse::CopyFrom(const H5ExtTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.H5ExtTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool H5ExtTransferResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has__baseresponse()) {
    if (!this->_baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void H5ExtTransferResponse::Swap(H5ExtTransferResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void H5ExtTransferResponse::InternalSwap(H5ExtTransferResponse* other) {
  std::swap(_baseresponse_, other->_baseresponse_);
  std::swap(_jsapiresponse_, other->_jsapiresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata H5ExtTransferResponse::GetMetadata() const {
  protobuf_H5ExtTransferResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_H5ExtTransferResponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// H5ExtTransferResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
bool H5ExtTransferResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void H5ExtTransferResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void H5ExtTransferResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void H5ExtTransferResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
const ::MMPro::micromsg::BaseResponse& H5ExtTransferResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.H5ExtTransferResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
::MMPro::micromsg::BaseResponse* H5ExtTransferResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.H5ExtTransferResponse._BaseResponse)
  return _baseresponse_;
}
::MMPro::micromsg::BaseResponse* H5ExtTransferResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.H5ExtTransferResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
void H5ExtTransferResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.H5ExtTransferResponse._BaseResponse)
}

// optional .MMPro.micromsg.JsApiResponse _jsApiResponse = 2;
bool H5ExtTransferResponse::has__jsapiresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void H5ExtTransferResponse::set_has__jsapiresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void H5ExtTransferResponse::clear_has__jsapiresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void H5ExtTransferResponse::clear__jsapiresponse() {
  if (_jsapiresponse_ != NULL) _jsapiresponse_->::MMPro::micromsg::JsApiResponse::Clear();
  clear_has__jsapiresponse();
}
const ::MMPro::micromsg::JsApiResponse& H5ExtTransferResponse::_jsapiresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.H5ExtTransferResponse._jsApiResponse)
  return _jsapiresponse_ != NULL ? *_jsapiresponse_
                         : *::MMPro::micromsg::JsApiResponse::internal_default_instance();
}
::MMPro::micromsg::JsApiResponse* H5ExtTransferResponse::mutable__jsapiresponse() {
  set_has__jsapiresponse();
  if (_jsapiresponse_ == NULL) {
    _jsapiresponse_ = new ::MMPro::micromsg::JsApiResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.H5ExtTransferResponse._jsApiResponse)
  return _jsapiresponse_;
}
::MMPro::micromsg::JsApiResponse* H5ExtTransferResponse::release__jsapiresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.H5ExtTransferResponse._jsApiResponse)
  clear_has__jsapiresponse();
  ::MMPro::micromsg::JsApiResponse* temp = _jsapiresponse_;
  _jsapiresponse_ = NULL;
  return temp;
}
void H5ExtTransferResponse::set_allocated__jsapiresponse(::MMPro::micromsg::JsApiResponse* _jsapiresponse) {
  delete _jsapiresponse_;
  _jsapiresponse_ = _jsapiresponse;
  if (_jsapiresponse) {
    set_has__jsapiresponse();
  } else {
    clear_has__jsapiresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.H5ExtTransferResponse._jsApiResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
